doctrine:
    orm:
        mappings:
            xi_filelib:
                dir:    %kernel.root_dir%/../vendor/xi/filelib/library/Xi/Filelib/Backend/Platform/DoctrineOrm/Entity
                prefix: Xi\Filelib\Backend\Platform\DoctrineOrm\Entity
                type:   annotation
                is_bundle: false

xi_filelib:

    authorization:
        enabled: true
        adapter_service: "xi_filelib.simple_authorization_adapter"

    temp_dir: %kernel.root_dir%/data/temp

    #queue:
    #    class: Xi\Filelib\Queue\PhpAMQPQueue
    #    arguments: [ "%amqp_host%", 5672, "%amqp_username%", "%amqp_password%", "%amqp_vhost%", "oy_filelib_exchange", "oy_filelib_queue" ]

    profiles: ['lusser']

    storage:
        file_permission: "600"
        directory_permission: "700"
        directory_id_calculator:
            class: Xi\Filelib\Storage\Filesystem\DirectoryIdCalculator\TimeDirectoryIdCalculator
            arguments: [ 'Y/m/d' ]

    #renderer:
    #    enable_acceleration: false
    #    strip_prefix: ''
    #    add_prefix: ''

    publisher:
        automatic_publisher: false
        beautifurls: true
        adapter:
            class: Xi\Filelib\Publisher\Adapter\Filesystem\SymlinkFilesystemPublisherAdapter
            arguments: [ "%kernel.root_dir%/../web/files", "600", "700", "/files", "../../app/data/files" ]

    plugins:
        randomizer:
            profiles: [default]
            class: Xi\Filelib\Plugin\RandomizeNamePlugin
            arguments: []
        original:
            profiles: [default]
            class: Xi\Filelib\Plugin\VersionProvider\OriginalVersionPlugin
            arguments: [original]

        preformat:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\ChangeFormatPlugin
            arguments:
                - jpg
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 80 ]
                    3: [ scaleImage, [ 1024, 768, 1 ]]
                    4: [ modulateImage, [ 100, 30, 100 ]]
        mini:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - mini
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 30 ]
                    3: [ scaleImage, [ 320, 200, 1 ]]
                    Xi\Filelib\Plugin\Image\Command\WatermarkCommand: [ %kernel.root_dir%/data/watermark.png, se, 10 ]
        cropped:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - cropped
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 30 ]
                    3: [ cropThumbnailImage, [ 100, 100 ]]
        cinemascope:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - cinemascope
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 50 ]
                    3: [ cropThumbnailImage, [ 800, 200 ]]
                    4: [ sepiaToneImage, 90 ]
                    Xi\Filelib\Plugin\Image\Command\WatermarkCommand: [ %kernel.root_dir%/data/watermark.png, se, 10 ]
        thumb:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - thumb
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 50 ]
                    3: [ scaleImage, [ 640, 480, true ]]
                    Xi\Filelib\Plugin\Image\Command\WatermarkCommand: [ %kernel.root_dir%/data/watermark.png, nw, 5 ]


#    plugins:
##        zencoder:
##            identifier: zencoder
##            type: Xi\Filelib\Plugin\Video\ZencoderPlugin
##            profiles: [versioned]
##            apiKey: %zencoder_key%
##            awsKey: %s3_key%
##            awsSecretKey: %s3_secretkey%
##            awsBucket: %s3_bucket%
##            outputs:
##                pygmi:
##                    extension: mp4
##                    output:
##                        label: pygmi
##                        device_profile: v2/mobile/legacy
##                watussi:
##                    extension: mp4
##                    output:
##                        label: watussi
##                        device_profile: v2/mobile/advanced
#
