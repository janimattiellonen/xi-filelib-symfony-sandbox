doctrine:
    orm:
        mappings:
            xi_filelib:
                dir:    %kernel.root_dir%/../vendor/xi/filelib/library/Xi/Filelib/Backend/Platform/DoctrineOrm/Entity
                prefix: Xi\Filelib\Backend\Platform\DoctrineOrm\Entity
                type:   annotation
                is_bundle: false

xi_filelib:

    profiles: ['lusser']

    renderer:
        enable_acceleration: false
        strip_prefix: ''
        add_prefix: ''

    publisher:
        beautifurls: false

    plugins:
        randomizer:
            profiles: [default]
            class: Xi\Filelib\Plugin\RandomizeNamePlugin
            arguments: []
        original:
            profiles: [default]
            class: Xi\Filelib\Plugin\VersionProvider\OriginalVersionPlugin
            arguments: [original]

        preformat:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\ChangeFormatPlugin
            arguments:
                - jpg
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 80 ]
                    3: [ scaleImage, [ 1024, 768, 1 ]]
                    4: [ modulateImage, [ 100, 30, 100 ]]
        mini:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - mini
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 30 ]
                    3: [ scaleImage, [ 320, 200, 1 ]]
                    Xi\Filelib\Plugin\Image\Command\WatermarkCommand: [ %kernel.root_dir%/data/watermark.png, se, 10 ]
        cropped:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - cropped
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 30 ]
                    3: [ cropThumbnailImage, [ 100, 100 ]]
        cinemascope:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - cinemascope
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 50 ]
                    3: [ cropThumbnailImage, [ 800, 200 ]]
                    4: [ sepiaToneImage, 90 ]
                    Xi\Filelib\Plugin\Image\Command\WatermarkCommand: [ %kernel.root_dir%/data/watermark.png, se, 10 ]
        thumb:
            profiles: [default]
            class: Xi\Filelib\Plugin\Image\VersionPlugin
            arguments:
                - thumb
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 50 ]
                    3: [ scaleImage, [ 640, 480, true ]]
                    Xi\Filelib\Plugin\Image\Command\WatermarkCommand: [ %kernel.root_dir%/data/watermark.png, nw, 5 ]
        puuppa:
            profiles: [default]
            class: Filelib\Bundle\DemoBundle\Plugin\VersionPlugin
            arguments:
                - puuppa
                -
                    0: [ setImageCompression, 8 ]
                    1: [ setImageFormat, jpg]
                    2: [ setImageCompressionQuality, 30 ]
                    3: [ scaleImage, [ 320, 200, true ]]
                    Xi\Filelib\Plugin\Image\Command\WatermarkCommand: [ %kernel.root_dir%/data/watermark.png, nw, 5 ]


##        zencoder:
#    queue:
#        type: Xi\Filelib\Queue\PhpAMQPQueue
#        arguments: [ "%amqp_host%", 5672, "%amqp_username%", "%amqp_password%", "filelib", "filelib_exchange", "filelib_queue" ]
#    slugifier:
#        type: Xi\Filelib\Tool\Slugifier\Zend2Slugifier
#    transliterator:
#        type: Xi\Filelib\Tool\Transliterator\StupidTransliterator
#        arguments: []
#    renderer:
#        accelerate: false
#        stripPrefixFromAcceleratedPath: "%kernel.root_dir%/data/files"
#        addPrefixToAcceleratedPath: "/protected"
#    cache: default
#    tempDir: %kernel.root_dir%/data/temp
#    backend:
#        doctrine_orm:
#            entity_manager: doctrine.orm.default_entity_manager
#    storage_filesystem:
#        directoryPermission: '775'
#        filePermission: '644'
#        root: %kernel.root_dir%/data/files
#        directoryIdCalculator:
##            type: Xi\Filelib\Storage\Filesystem\DirectoryIdCalculator\TimeDirectoryIdCalculator
##            options: { format: Y/m/d }
#            type: Xi\Filelib\Storage\Filesystem\DirectoryIdCalculator\LeveledDirectoryIdCalculator
#            options: { directoryLevels: 3, filesPerDirectory: 500 }
#    publisher:
#        type: Xi\Filelib\Publisher\Filesystem\SymlinkFilesystemPublisher
#        options:
#            relativePathToRoot: ../../app/data/files
#            baseUrl: /files
#            publicRoot: %kernel.root_dir%/../web/files
#    profiles:
#        default:
#            identifier: default
#            description: 'Upload the original file, unmodified'
#            accessToOriginal: true
#            publishOriginal: true
#            linker:
#                type: Xi\Filelib\Linker\SequentialLinker
#                options:
#                    filesPerDirectory: 500
#                    directoryLevels: 3
#        versioned:
#            identifier: versioned
#            description: 'Create web optimized versions'
#            accessToOriginal: true
#            publishOriginal: true
#            linker:
#                type: Xi\Filelib\Linker\BeautifurlLinker
##                options:
##                    slugify: false
#    plugins:
##        zencoder:
##            identifier: zencoder
##            type: Xi\Filelib\Plugin\Video\ZencoderPlugin
##            profiles: [versioned]
##            apiKey: %zencoder_key%
##            awsKey: %s3_key%
##            awsSecretKey: %s3_secretkey%
##            awsBucket: %s3_bucket%
##            outputs:
##                pygmi:
##                    extension: mp4
##                    output:
##                        label: pygmi
##                        device_profile: v2/mobile/legacy
##                watussi:
##                    extension: mp4
##                    output:
##                        label: watussi
##                        device_profile: v2/mobile/advanced
#
